#include<stdio.h>
#include<stdlib.h>
int find();
int uni();
int ne=1,n,min,a,b,i,j,u,v,c[20][20],mincost,parent[20];
void main()
{
    printf("\nImplementation of Kruskal's Algorithm");
    printf("\nEnter the number of vertices :");
    scanf("%d",&n);
    printf("\nEnter the adjacency matrix :\n");
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=n;j++)
        {
            scanf("%d",&c[i][j]);
            if(c[i][j]==0)
            c[i][j]=999;
        }
    }
    printf("\nThe edges of Minimum Cost Spanning Tree are :\n");
    while(ne<n)
    {
        for(i=1,min=999;i<=n;i++)
        {
            for(j=1;j<=n;j++)
            {
                if(c[i][j]<min)
                {
                    min=c[i][j];
                    a=u=i;
                    b=v=j;
                }
            }
        }
        u=find(u);
        v=find(v);
        if(uni(u,v))
        {
            printf("%d edge (%d,%d) =%d\n",ne++,a,b,min);
            mincost=mincost+min;
        }
        c[a][b]=c[b][a]=999;
    }
    printf("\nMinimum cost =%d\n",mincost);
}
int find(int i)
{
    while(parent[i])
    i=parent[i];
    return i;
}
int uni(int i,int j)
{
    if(i!=j)
    {
        parent[j]=i;
        return 1;
    }
    return 0;
}



/*Implementation of Kruskal's Algorithm
Enter the number of vertices :5        

Enter the adjacency matrix :
0 2 1 0 0
2 0 0 4 5
1 0 0 0 2
0 4 0 0 0
0 0 2 0 0

The edges of Minimum Cost Spanning Tree are
1 edge (1,3) =1
2 edge (1,2) =2
3 edge (3,5) =2
4 edge (2,4) =4

Minimum cost =9*/

